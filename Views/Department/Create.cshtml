@model EmployeeManagement.Models.Department

@{
    ViewBag.Title = "Create Department";
}

<div class="row justify-content-center">
    <div class="col-lg-6">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">
                    <i class="fas fa-plus me-2"></i>Create New Department
                </h4>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Create", "Department", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Name, new { @class = "form-label required" })
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-building"></i></span>
                            @Html.TextBoxFor(m => m.Name, new {
                            @class = "form-control",
                                                placeholder = "Enter department name",
                                                required = "required",
                                                maxlength = "100"
                                                })
                    </div>
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger small" })
                    <div class="form-text">
                        <i class="fas fa-info-circle me-1"></i>
                        Choose a clear and descriptive name for your department.
                    </div>
                </div>

                <div class="mb-4">
                    @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                    @Html.TextAreaFor(m => m.Description, new {
                                        @class = "form-control",
                                        rows = "4",
                                        placeholder = "Enter department description (optional)",
                                        maxlength = "500"
                                        })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger small" })
                    <div class="form-text">
                        <span id="charCount">0</span>/500 characters
                    </div>
                </div>

                <!-- Preview Section -->
                <div class="mb-4">
                    <h6 class="text-muted">Preview:</h6>
                    <div class="card bg-light" id="previewCard">
                        <div class="card-body py-3">
                            <h6 class="card-title text-primary mb-1" id="previewName">
                                <i class="fas fa-building me-2"></i>Department Name
                            </h6>
                            <p class="card-text text-muted mb-0" id="previewDescription">
                                Department description will appear here...
                            </p>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                    <button type="submit" class="btn btn-primary" id="createBtn">
                        <i class="fas fa-save me-1"></i>Create Department
                    </button>
                </div>
                                }
            </div>
        </div>

        <!-- Tips Card -->
        <div class="card shadow-sm mt-4">
            <div class="card-header bg-light">
                <h6 class="mb-0">
                    <i class="fas fa-lightbulb me-2 text-warning"></i>Tips for Creating Departments
                </h6>
            </div>
            <div class="card-body">
                <ul class="mb-0">
                    <li class="mb-2">
                        <strong>Use clear names:</strong> Choose names that clearly identify the department's function (e.g., "Information Technology", "Human Resources").
                    </li>
                    <li class="mb-2">
                        <strong>Add descriptions:</strong> Include a brief description of the department's role and responsibilities.
                    </li>
                    <li class="mb-0">
                        <strong>Plan structure:</strong> Consider how this department fits into your overall organizational structure.
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // Form validation
            $('form').on('submit', function(e) {
                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                this.classList.add('was-validated');

                if (this.checkValidity()) {
                    $('#createBtn').html('<i class="fas fa-spinner fa-spin me-1"></i>Creating...').prop('disabled', true);
                }
            });

            // Character counter for description
            $('#Description').on('input', function() {
                var length = $(this).val().length;
                $('#charCount').text(length);

                if (length > 400) {
                    $('#charCount').addClass('text-warning');
                } else if (length > 450) {
                    $('#charCount').addClass('text-danger').removeClass('text-warning');
                } else {
                    $('#charCount').removeClass('text-warning text-danger');
                }
            });

            // Live preview
            function updatePreview() {
                var name = $('#Name').val() || 'Department Name';
                var description = $('#Description').val() || 'Department description will appear here...';

                $('#previewName').html('<i class="fas fa-building me-2"></i>' + name);
                $('#previewDescription').text(description);
            }

            $('#Name, #Description').on('input', updatePreview);

            // Real-time name validation
            $('#Name').on('blur', function() {
                var name = $(this).val();
                if (name) {
                    $.post('@Url.Action("CheckDepartmentNameExists", "Department")', { name: name }, function(data) {
                        if (data.exists) {
                            $('#Name').addClass('is-invalid');
                            $('.field-validation-valid[data-valmsg-for="Name"]').text('A department with this name already exists.');
                        }
                    });
                }
            });

            // Auto-capitalize department name
            $('#Name').on('input', function() {
                var words = $(this).val().toLowerCase().split(' ');
                for (var i = 0; i < words.length; i++) {
                    if (words[i].length > 0) {
                        words[i] = words[i][0].toUpperCase() + words[i].substr(1);
                    }
                }
                $(this).val(words.join(' '));
                updatePreview();
            });

            // Initialize preview
            updatePreview();
        });
    </script>
}