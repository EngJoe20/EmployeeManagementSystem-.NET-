@model IEnumerable<EmployeeManagement.Models.Department>

@{
    ViewBag.Title = "Departments";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="text-primary">
        <i class="fas fa-sitemap me-2"></i>Departments
        <small class="text-muted">(@Model.Count() departments)</small>
    </h2>
    @if (User.IsInRole("Admin"))
    {
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i>Add Department
        </a>
    }
</div>

@if (Model.Any())
{
    <div class="row">
        @foreach (var department in Model)
        {
            <div class="col-lg-6 col-xl-4 mb-4">
                <div class="card shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <h5 class="card-title text-primary mb-1">
                                    <i class="fas fa-building me-2"></i>@department.Name
                                </h5>
                                <small class="text-muted">ID: #DEPT@(department.Id.ToString("00"))</small>
                            </div>
                            @if (User.IsInRole("Admin"))
                            {
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary" type="button"
                                            data-bs-toggle="dropdown">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("Edit", new { id = department.Id })">
                                                <i class="fas fa-edit me-2"></i>Edit
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <button class="dropdown-item text-danger"
                                                    onclick="confirmDelete(@department.Id, '@department.Name')">
                                                <i class="fas fa-trash me-2"></i>Delete
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            }
                        </div>

                        @if (!string.IsNullOrEmpty(department.Description))
                        {
                            <p class="card-text text-muted mb-3">@department.Description</p>
                        }
                        else
                        {
                            <p class="card-text text-muted mb-3"><em>No description provided</em></p>
                        }

                        <!-- Employee Count & Stats -->
                        <div class="row text-center mb-3">
                            <div class="col-6">
                                <div class="border-end">
                                    <h4 class="text-primary mb-0">@department.Employees.Count(e => e.IsActive)</h4>
                                    <small class="text-muted">Employees</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <h4 class="text-success mb-0">
                                    @if (department.Employees.Any(e => e.IsActive))
                                    {
                                        @department.Employees.Where(e => e.IsActive).Average(e => e.Salary).ToString("C0")
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </h4>
                                <small class="text-muted">Avg. Salary</small>
                            </div>
                        </div>

                        <!-- Recent Employees -->
                        @if (department.Employees.Any(e => e.IsActive))
                        {
                            <div class="mb-3">
                                <h6 class="text-muted mb-2">
                                    <i class="fas fa-users me-1"></i>Recent Employees:
                                </h6>
                                <div class="d-flex flex-wrap gap-1">
                                    @foreach (var employee in department.Employees.Where(e => e.IsActive).Take(4))
                                    {
                                        <span class="badge bg-light text-dark border"
                                              title="@employee.FullName - @employee.Salary.ToString("C")"
                                              data-bs-toggle="tooltip">
                                            @employee.FirstName.Substring(0, 1)@employee.LastName.Substring(0, 1)
                                        </span>
                                    }
                                    @if (department.Employees.Count(e => e.IsActive) > 4)
                                    {
                                        <span class="badge bg-secondary">+@(department.Employees.Count(e => e.IsActive) - 4) more</span>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <i class="fas fa-users fa-2x text-muted mb-2"></i>
                                <p class="text-muted mb-0">No employees assigned</p>
                            </div>
                        }

                        <div class="mt-auto">
                            <small class="text-muted">
                                <i class="fas fa-calendar me-1"></i>
                                Created: @department.CreatedDate.ToString("MMM yyyy")
                            </small>
                        </div>
                    </div>
                    <div class="card-footer bg-light">
                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Details", new { id = department.Id })" class="btn btn-primary btn-sm">
                                <i class="fas fa-eye me-1"></i>View Details
                            </a>
                            @if (User.IsInRole("Admin"))
                            {
                                <a href="@Url.Action("Edit", new { id = department.Id })" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-edit me-1"></i>Edit
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Summary Statistics -->
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-bar me-2"></i>Department Overview
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-3">
                            <h3 class="text-primary">@Model.Count()</h3>
                            <p class="text-muted mb-0">Total Departments</p>
                        </div>
                        <div class="col-md-3">
                            <h3 class="text-success">@Model.Sum(d => d.Employees.Count(e => e.IsActive))</h3>
                            <p class="text-muted mb-0">Total Employees</p>
                        </div>
                        <div class="col-md-3">
                            <h3 class="text-info">
                                @{
                                    var activeDepartments = Model.Where(d => d.Employees.Any(e => e.IsActive));
                                    if (activeDepartments.Any())
                                    {
                                        var avgSalary = activeDepartments
                                        .Average(d => d.Employees.Where(e => e.IsActive).Select(e => e.Salary).DefaultIfEmpty(0).Average());
                                        @avgSalary.ToString("C0")
                                    }
                                    else
                                    {
                                        <span>$0</span>
                                    }
                                }
                            </h3>
                            <p class="text-muted mb-0">Average Salary</p>
                        </div>

                        <div class="col-md-3">
                            <h3 class="text-warning">@Model.Count(d => !d.Employees.Any(e => e.IsActive))</h3>
                            <p class="text-muted mb-0">Empty Departments</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="card shadow-sm">
        <div class="card-body text-center py-5">
            <i class="fas fa-sitemap fa-4x text-muted mb-3"></i>
            <h4 class="text-muted">No departments found</h4>
            @if (User.IsInRole("Admin"))
            {
                <p class="text-muted mb-4">Get started by creating your first department to organize your employees.</p>
                <a href="@Url.Action("Create")" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus me-1"></i>Create First Department
                </a>
            }
            else
            {
                <p class="text-muted">Contact your administrator to set up departments.</p>
            }
        </div>
    </div>
}

<!-- Delete Confirmation Modal -->
@if (User.IsInRole("Admin"))
{
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle text-warning me-2"></i>Confirm Delete
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the department <strong id="departmentName"></strong>?</p>
                    <div class="alert alert-warning">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Warning:</strong> You cannot delete a department that has active employees assigned to it.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form id="deleteForm" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">Delete Department</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
        $(document).ready(function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        function confirmDelete(departmentId, departmentName) {
            document.getElementById('departmentName').textContent = departmentName;
            document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + departmentId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }
    </script>
}